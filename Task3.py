# 3.3[20]: В настольной игре Скрабл (Scrabble) 
# каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, 
# которое содержит либо только английские, 
# либо только русские буквы и заранее известно какой алфавит надо использовать.

# Примеры/Тесты:
# Input:   ноутбук
# Output:  12

# Input:   notebook
# Output:  14
# (*) Примечание.
# Подумайте о том какие структуры данных здесь наиболее удобно использовать,
# чтобы просто проверять в какую группу попадает буква, 
# а также просто накапливать сумму очков.

word = input("Input you word ").lower()
res = 0
a = {"a", "e", "i", "o", "u", "l", "n", "s", "t",
     "r", "а", "в", "е", "и", "н", "о", "р", "с", "т"}
b = {"d", "g", "д", "к", "л", "м", "п", "у"}
c = {"b", "c", "m", "p", "б", "г", "ё", "ь", "я"}
d = {"f", "h", "v", "w", "y", "й", "ы"}
e = {"k", "ж", "з", "х", "ц", "ч"}
f = {"j", "x", "ш", "э", "ю"}
g = {"q", "z", "ф", "щ", "ъ"}

for i in word:
    if i in a:
        res += 1
    if i in b:
        res += 2
    if i in c:
        res += 3
    if i in d:
        res += 4
    if i in e:
        res += 5
    if i in f:
        res += 8
    if i in g:
        res += 10
print(res)
